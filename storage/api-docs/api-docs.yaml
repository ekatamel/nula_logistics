openapi: 3.0.0
info:
  title: 'Nula Logistics API documentation'
  description: 'API documentation for Products, Suppliers and Warehouses management. All routes start with /api namespace'
  contact:
    email: katerinka.melnichuk@gmail.com
  version: 1.0.0
paths:
  /products:
    get:
      tags:
        - Products
      summary: 'Get list of products'
      description: 'Returns list of products with filters'
      operationId: getProductsList
      parameters:
        -
          name: name
          in: query
          description: 'Product name'
          required: false
          schema:
            type: string
        -
          name: price_from
          in: query
          description: 'Minimum price of product'
          required: false
          schema:
            type: number
            format: float
        -
          name: price_to
          in: query
          description: 'Maximum price of product'
          required: false
          schema:
            type: number
            format: float
        -
          name: date_added_from
          in: query
          description: 'Start date for product creation'
          required: false
          schema:
            type: string
            format: date
        -
          name: date_added_to
          in: query
          description: 'End date for product creation'
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                    supplier_id:
                      type: integer
                    name:
                      type: string
                    price:
                      type: number
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    supplier:
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        created_at:
                          type: string
                        updated_at:
                          type: string
                      type: object
                  type: object
        400:
          description: 'Bad Request'
        401:
          description: Unauthorized
        403:
          description: Forbidden
    post:
      tags:
        - Product
      summary: 'Create a new product'
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - supplier_id
                - name
                - price
              properties:
                supplier_id:
                  type: integer
                name:
                  type: string
                price:
                  type: number
              type: object
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  supplier_id:
                    type: integer
                  name:
                    type: string
                  price:
                    type: number
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  id:
                    type: integer
                type: object
        400:
          description: 'Bad Request'
        401:
          description: Unauthenticated
        403:
          description: Forbidden
        500:
          description: 'Internal Server Error'
  '/products/{id}':
    get:
      tags:
        - Product
      summary: 'Retrieve a single product by id'
      operationId: b46f4aa73232d0368eee698a082342a4
      parameters:
        -
          name: id
          in: path
          description: 'ID of the product to retrieve'
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  supplier_id:
                    type: integer
                  name:
                    type: string
                  price:
                    type: number
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  supplier:
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    type: object
                type: object
        404:
          description: 'Product not found'
    delete:
      tags:
        - Products
      summary: 'Delete a product'
      operationId: deleteProduct
      parameters:
        -
          name: id
          in: path
          description: 'Product id'
          required: true
          schema:
            type: integer
      responses:
        204:
          description: 'Successful operation'
        404:
          description: 'Resource not found'
    patch:
      tags:
        - Products
      summary: 'Update a product'
      operationId: updateProduct
      parameters:
        -
          name: id
          in: path
          description: 'Product id'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Input data format'
        required: true
        content:
          application/json:
            schema:
              required:
                - supplier_id
                - name
                - price
              properties:
                supplier_id:
                  type: integer
                name:
                  type: string
                price:
                  type: number
              type: object
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  supplier_id:
                    type: integer
                  name:
                    type: string
                  price:
                    type: number
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  id:
                    type: integer
                type: object
        400:
          description: 'Bad request'
        404:
          description: 'Resource not found'
  /stats:
    get:
      summary: 'Get statistics'
      description: 'Retrieve statistics about products, warehouses, and suppliers'
      operationId: 39a82d50eab76d46ac1470796ae3fca5
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  most_expensive_product:
                    description: 'The most expensive product'
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      price:
                        type: integer
                      supplier_id:
                        type: integer
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    type: object
                  most_loaded_warehouse:
                    description: 'The most loaded warehouse'
                    properties:
                      id:
                        type: integer
                      address:
                        type: string
                      supplier_id:
                        type: integer
                      product_count:
                        type: integer
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    type: object
                  biggest_supplier:
                    description: 'The biggest supplier'
                    properties:
                      id:
                        type: integer
                      address:
                        type: string
                      name:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    type: object
                  total_suppliers:
                    description: 'The total number of suppliers'
                    type: integer
                  total_warehouses:
                    description: 'The total number of warehouses'
                    type: integer
                  total_products:
                    description: 'The total number of products'
                    type: integer
                type: object
  /suppliers:
    get:
      tags:
        - Supplier
      summary: 'Retrieve all suppliers'
      operationId: a043e760500e8b8058d41738e74046f7
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    address:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    products:
                      type: array
                      items:
                        properties:
                          id:
                            type: integer
                          supplier_id:
                            type: integer
                          name:
                            type: string
                          price:
                            type: number
                          created_at:
                            type: string
                          updated_at:
                            type: string
                        type: object
                    warehouses:
                      type: array
                      items:
                        properties:
                          id:
                            type: integer
                          supplier_id:
                            type: integer
                          address:
                            type: string
                          product_count:
                            type: number
                          created_at:
                            type: string
                          updated_at:
                            type: string
                        type: object
                  type: object
        400:
          description: 'Bad Request'
        401:
          description: Unauthorized
        403:
          description: Forbidden
    post:
      tags:
        - Suppliers
      summary: 'Create new supplier'
      description: 'Create a new supplier in the database'
      operationId: 3e424442ff493b5f7620e1ae344a23dc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: "Supplier's name"
                  type: string
                  example: 'Supplier A'
                address:
                  description: "Supplier's address"
                  type: string
                  example: '123 Main St'
              type: object
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  id:
                    description: "Supplier's ID"
                    type: integer
                  name:
                    description: "Supplier's name"
                    type: string
                  address:
                    description: "Supplier's address"
                    type: string
                type: object
        400:
          description: 'Bad Request'
        401:
          description: Unauthorized
  '/suppliers/{id}':
    get:
      tags:
        - Suppliers
      summary: 'Get supplier information'
      description: 'Returns detailed information about a single supplier'
      operationId: showSupplier
      parameters:
        -
          name: id
          in: path
          description: 'ID of the supplier'
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  address:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  products:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        supplier_id:
                          type: integer
                        name:
                          type: string
                        price:
                          type: number
                        created_at:
                          type: string
                        updated_at:
                          type: string
                      type: object
                  warehouses:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        supplier_id:
                          type: integer
                        address:
                          type: string
                        product_count:
                          type: number
                        created_at:
                          type: string
                        updated_at:
                          type: string
                      type: object
                type: object
        404:
          description: 'Supplier not found'
    delete:
      summary: 'Delete a supplier'
      description: 'Deletes a supplier with the given ID'
      operationId: c0c1db4a3637fbc1a208366687f6e526
      parameters:
        -
          name: id
          in: path
          description: 'ID of the supplier to delete'
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'The supplier was successfully deleted!'
                type: object
        404:
          description: 'Supplier not found'
    patch:
      tags:
        - Suppliers
      summary: 'Update a supplier'
      operationId: updateSupplier
      parameters:
        -
          name: id
          in: path
          description: 'ID of the supplier to update'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Supplier data to update'
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                address:
                  type: string
              type: object
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  name:
                    type: string
                  address:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  id:
                    type: integer
                type: object
        404:
          description: 'Supplier not found'
        422:
          description: 'Validation error'
  /warehouses:
    get:
      tags:
        - Warehouse
      summary: 'Get all warehouses'
      description: 'Returns warehouses.'
      operationId: 34b704d697891877aebe330e42c4a83f
      responses:
        200:
          description: 'Returns the warehouses and their products.'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      example: '1'
                    supplier:
                      type: array
                      items:
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          address:
                            type: string
                          created_at:
                            type: string
                          updated_at:
                            type: string
                        type: object
                    address:
                      type: string
                      example: '123 Main St'
                    product_count:
                      type: integer
                      example: '10'
                    created_at:
                      type: string
                      format: date-time
                      example: '2023-02-14T17:45:00Z'
                    updated_at:
                      type: string
                      format: date-time
                      example: '2023-02-14T18:15:00Z'
                    products:
                      type: array
                      items:
                        properties:
                          id:
                            type: integer
                            example: '1'
                          name:
                            type: string
                            example: 'Product 1'
                          price:
                            type: number
                            format: float
                            example: '10.99'
                          quantity:
                            type: integer
                            example: '5'
                          supplier:
                            type: array
                            items:
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                address:
                                  type: string
                                created_at:
                                  type: string
                                updated_at:
                                  type: string
                              type: object
                          created_at:
                            type: string
                            format: date-time
                            example: '2023-02-14T17:45:00Z'
                          updated_at:
                            type: string
                            format: date-time
                            example: '2023-02-14T18:15:00Z'
                        type: object
                  type: object
        404:
          description: 'Warehouse not found'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'Warehouse not found.'
                type: object
    post:
      tags:
        - Warehouse
      summary: 'Create a new warehouse'
      operationId: a5d77078c1896b08c9841ce39d34abbc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                supplier_id:
                  description: "Supplier's id"
                  type: integer
                  example: '1'
                address:
                  description: "Supplier's address"
                  type: string
                  example: '123 Main St'
              type: object
      responses:
        200:
          description: 'Warehouse created successfully'
          content:
            application/json:
              schema:
                properties:
                  id:
                    description: 'Warehouse ID'
                    type: integer
                  supplier_id:
                    description: "Supplier's id"
                    type: integer
                  address:
                    description: "Supplier's address"
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                type: object
        422:
          description: 'Unprocessable Entity'
  '/warehouses/{id}':
    get:
      tags:
        - Warehouse
      summary: 'Get a specific warehouse'
      description: 'Returns details of a specific warehouse including the products it holds.'
      operationId: 90ba5b27879a11bf31752545c6de33ff
      parameters:
        -
          name: id
          in: path
          description: 'ID of the warehouse to retrieve'
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        200:
          description: 'Returns the warehouse and its products.'
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    example: '1'
                  supplier:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        address:
                          type: string
                        created_at:
                          type: string
                        updated_at:
                          type: string
                      type: object
                  address:
                    type: string
                    example: '123 Main St'
                  product_count:
                    type: integer
                    example: '10'
                  created_at:
                    type: string
                    format: date-time
                    example: '2023-02-14T17:45:00Z'
                  updated_at:
                    type: string
                    format: date-time
                    example: '2023-02-14T18:15:00Z'
                  products:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                          example: '1'
                        name:
                          type: string
                          example: 'Product 1'
                        price:
                          type: number
                          format: float
                          example: '10.99'
                        quantity:
                          type: integer
                          example: '5'
                        supplier:
                          type: array
                          items:
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                              address:
                                type: string
                              created_at:
                                type: string
                              updated_at:
                                type: string
                            type: object
                        created_at:
                          type: string
                          format: date-time
                          example: '2023-02-14T17:45:00Z'
                        updated_at:
                          type: string
                          format: date-time
                          example: '2023-02-14T18:15:00Z'
                      type: object
                type: object
        404:
          description: 'Warehouse not found'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'Warehouse not found.'
                type: object
    delete:
      tags:
        - Warehouses
      summary: 'Delete a warehouse'
      operationId: deleteWarehouse
      parameters:
        -
          name: id
          in: path
          description: 'Warehouse id'
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'The warehouse was successfully deleted!'
                type: object
        404:
          description: 'Resource not found'
    patch:
      tags:
        - Warehouse
      summary: 'Update a Warehouse'
      operationId: e1e205564c8c5834e93884cdc1932a14
      parameters:
        -
          name: id
          in: path
          description: 'ID of the Warehouse'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - supplier_id
              properties:
                supplier_id:
                  description: 'ID of the Supplier'
                  type: integer
                address:
                  description: 'Address of the Warehouse'
                  type: string
              type: object
      responses:
        200:
          description: 'Warehouse updated successfully'
          content:
            application/json:
              schema:
                properties:
                  id:
                    description: 'Warehouse ID'
                    type: integer
                  supplier_id:
                    description: "Supplier's id"
                    type: integer
                  address:
                    description: "Supplier's address"
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                type: object
        422:
          description: 'Unprocessable Entity'
        404:
          description: 'The requested Warehouse was not found'
        400:
          description: 'Bad request'
  '/warehouses/{warehouseId}/products/{productId}':
    patch:
      tags:
        - Warehouse
      summary: 'Assign a Product to a Warehouse'
      operationId: 9e18f977f9ba87c0b06337bb93e41ee0
      parameters:
        -
          name: warehouseId
          in: path
          description: 'ID of the Warehouse'
          required: true
          schema:
            type: integer
        -
          name: productId
          in: path
          description: 'ID of the Product'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                quantity:
                  description: 'Quantity of the Product'
                  type: integer
              type: object
      responses:
        201:
          description: 'Product assigned to Warehouse successfully'
        400:
          description: 'Bad request'
